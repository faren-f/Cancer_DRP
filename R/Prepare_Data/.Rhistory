y_pred = predict(model,Xtest)
Ranksum = wilcox.test(y_pred[ytest==1], y_pred[ytest==2], alternative ="greater")$p.value
Ranksum
plot(model$results$RMSE)
model$bestTune
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
seq(.000001,.01,.0001)
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
rm(list=ls())
library(parallel)
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
sen_PRISM = readRDS("Processed_data/Other/Sen_PRISM_24_Drugs.rds")
res_TCGA = readRDS("Processed_data/Other/Res_TCGA_24_Drugs.rds")
GE_PRISM = readRDS("Processed_data/S23/expresion_matrix_PRISM_with@TCGA@genes.rds")
GE_TCGA = readRDS("Processed_data/S23/expresion_matrix_TCGA.rds")
# Remove genes whose Q3 is zero
q3_genes = apply(GE_TCGA,2,quantile,prob=0.75)
GE_TCGA = GE_TCGA[,-which(q3_genes==0)]
GE_PRISM = GE_PRISM[,-which(q3_genes==0)]
Models = c("RandomForest")
clusterExport(cl, c("GE_PRISM","GE_TCGA","sen_PRISM","res_TCGA","Models"))
source("F7-RandomForest.R")
source("F18-Combat_Normalization.R")
Xtrain = GE_PRISM[!is.na(sen_PRISM[,i]),]
ytrain = sen_PRISM[!is.na(sen_PRISM[,i]),i]
i=5
Xtrain = GE_PRISM[!is.na(sen_PRISM[,i]),]
ytrain = sen_PRISM[!is.na(sen_PRISM[,i]),i]
Xtest = GE_TCGA[!is.na(res_TCGA[,i]),]
ytest = res_TCGA[!is.na(res_TCGA[,i]),i]
#X_Normalization = Rank(Xtrain,Xtest)
#X_Normalization = Rank(Xtrain,Xtest)
X_Normalization = Combat_Scale(Xtrain,Xtest)
Xtrain = X_Normalization[[1]]
Xtest = X_Normalization[[2]]
source("F15-Feature_Selection_PRISM@TCGA.R")
selected_features = c("Landmark_genes")
Omics_List = Feature_Selection_PRISM_TCGA(selected_features, Xtrain = Xtrain, Xtest = Xtest)
Xtrain = Omics_List[[1]]
index = Omics_List[[2]]
Xtest = Omics_List[[3]]
# Ytrain normalization
ytrain = scale(ytrain)
ytrain = ytrain[,1]
# Models
result = c()
for(M in Models){
model = get(M)
y_pred = model(ytrain = ytrain ,Xtrain = Xtrain,Xtest = Xtest)
corr = cor(ytest,y_pred)
ttest = t.test(y_pred[ytest==1], y_pred[ytest==2], alternative="greater")$p.value
Ranksum = wilcox.test(y_pred[ytest==1], y_pred[ytest==2], alternative ="greater")$p.value
result = rbind(result, c(corr, ttest, Ranksum))
}
result
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
clusterExport(cl, c("GE_PRISM","GE_TCGA","sen_PRISM","res_TCGA","Models"))
clusterEvalQ(cl, c(source("F7-RandomForest.R"),
source("F6-ENet.R"),source("F8-MLP.R"),
source("F10-Ridge.R"),source("F11-SGL.R"),
source("F13-Lasso.R"), source("F25-LinearcRegresion.R"),
source("F16-Zscore_Normalization.R"),
source("F17-Rank_Normalization.R"),
source("F18-Combat_Normalization.R"),
source("F19-Drug_Pathway_gene_set.R")))
stopCluster(cl)
rm(list=ls())
library(parallel)
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
sen_PRISM = readRDS("Processed_data/Other/Sen_PRISM_24_Drugs.rds")
res_TCGA = readRDS("Processed_data/Other/Res_TCGA_24_Drugs.rds")
GE_PRISM = readRDS("Processed_data/S23/expresion_matrix_PRISM_with@TCGA@genes.rds")
GE_TCGA = readRDS("Processed_data/S23/expresion_matrix_TCGA.rds")
# Remove genes whose Q3 is zero
q3_genes = apply(GE_TCGA,2,quantile,prob=0.75)
GE_TCGA = GE_TCGA[,-which(q3_genes==0)]
GE_PRISM = GE_PRISM[,-which(q3_genes==0)]
Models = c("RandomForest")
clusterExport(cl, c("GE_PRISM","GE_TCGA","sen_PRISM","res_TCGA","Models"))
clusterEvalQ(cl, c(source("F7-RandomForest.R"),
source("F6-ENet.R"),source("F8-MLP.R"),
source("F10-Ridge.R"),source("F11-SGL.R"),
source("F13-Lasso.R"), source("F25-LinearcRegresion.R"),
source("F16-Zscore_Normalization.R"),
source("F17-Rank_Normalization.R"),
source("F18-Combat_Normalization.R"),
source("F19-Drug_Pathway_gene_set.R")))
clusterEvalQ(cl, c(source("F7-RandomForest.R"),
source("F6-ENet.R"),source("F8-MLP.R"),
source("F10-Ridge.R"),source("F11-SGL.R"),
source("F13-Lasso.R"), source("F25-LinearcRegresion.R"),
source("F16-Zscore_Normalization.R"),
source("F17-Rank_Normalization.R"),
source("F18-Combat_Normalization.R"),
source("F19-Drug_Pathway_gene_set.R")))
source("F7-RandomForest.R")
source("F6-ENet.R")
source("F8-MLP.R")
source("F10-Ridge.R")
source("F11-SGL.R")
source("F13-Lasso.R")
c(source("F7-RandomForest.R"),
source("F6-ENet.R"),source("F8-MLP.R"),
source("F10-Ridge.R"),source("F11-SGL.R"),
source("F13-Lasso.R"), source("F25-LinearcRegresion.R"),
source("F16-Zscore_Normalization.R"),
source("F17-Rank_Normalization.R"),
source("F18-Combat_Normalization.R"),
source("F19-Drug_Pathway_gene_set.R"))
c(source("F7-RandomForest.R"),
source("F6-ENet.R"),source("F8-MLP.R"),
source("F10-Ridge.R"),source("F11-SGL.R"),
source("F13-Lasso.R"), source("F25-LinearRegression.R"),
source("F16-Zscore_Normalization.R"),
source("F17-Rank_Normalization.R"),
source("F18-Combat_Normalization.R"),
source("F19-Drug_Pathway_gene_set.R")
stopCluster(cl)
stopCluster(cl)
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/F7-RandomForest.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
rm(list=ls())
library(parallel)
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
sen_PRISM = readRDS("Processed_data/Other/Sen_PRISM_24_Drugs.rds")
res_TCGA = readRDS("Processed_data/Other/Res_TCGA_24_Drugs.rds")
GE_PRISM = readRDS("Processed_data/S23/expresion_matrix_PRISM_with@TCGA@genes.rds")
GE_TCGA = readRDS("Processed_data/S23/expresion_matrix_TCGA.rds")
# Remove genes whose Q3 is zero
q3_genes = apply(GE_TCGA,2,quantile,prob=0.75)
GE_TCGA = GE_TCGA[,-which(q3_genes==0)]
GE_PRISM = GE_PRISM[,-which(q3_genes==0)]
Models = c("RandomForest")
clusterExport(cl, c("GE_PRISM","GE_TCGA","sen_PRISM","res_TCGA","Models"))
clusterEvalQ(cl, c(source("F7-RandomForest.R"),
source("F6-ENet.R"),source("F8-MLP.R"),
source("F10-Ridge.R"),source("F11-SGL.R"),
source("F13-Lasso.R"), source("F25-LinearRegression.R"),
source("F16-Zscore_Normalization.R"),
source("F17-Rank_Normalization.R"),
source("F18-Combat_Normalization.R"),
source("F19-Drug_Pathway_gene_set.R")))
i=5
source("F25-LinearRegression.R")
source("F18-Combat_Normalization.R")
Xtrain = GE_PRISM[!is.na(sen_PRISM[,i]),]
ytrain = sen_PRISM[!is.na(sen_PRISM[,i]),i]
Xtest = GE_TCGA[!is.na(res_TCGA[,i]),]
ytest = res_TCGA[!is.na(res_TCGA[,i]),i]
#X_Normalization = Rank(Xtrain,Xtest)
#X_Normalization = Rank(Xtrain,Xtest)
X_Normalization = Combat_Scale(Xtrain,Xtest)
Xtrain = X_Normalization[[1]]
Xtest = X_Normalization[[2]]
source("F15-Feature_Selection_PRISM@TCGA.R")
selected_features = c("Landmark_genes")
Omics_List = Feature_Selection_PRISM_TCGA(selected_features, Xtrain = Xtrain, Xtest = Xtest)
Xtrain = Omics_List[[1]]
index = Omics_List[[2]]
Xtest = Omics_List[[3]]
# Ytrain normalization
ytrain = scale(ytrain)
ytrain = ytrain[,1]
# Models
result = c()
for(M in Models){
model = get(M)
y_pred = model(ytrain = ytrain ,Xtrain = Xtrain,Xtest = Xtest)
corr = cor(ytest,y_pred)
ttest = t.test(y_pred[ytest==1], y_pred[ytest==2], alternative="greater")$p.value
Ranksum = wilcox.test(y_pred[ytest==1], y_pred[ytest==2], alternative ="greater")$p.value
result = rbind(result, c(corr, ttest, Ranksum))
}
Model = "LinearcRegresion"
Models = "LinearcRegresion"
model = "LinearcRegresion"
y_pred = model(ytrain = ytrain ,Xtrain = Xtrain,Xtest = Xtest)
M = "LinearcRegresion"
model = get(M)
y_pred = model(ytrain = ytrain ,Xtrain = Xtrain,Xtest = Xtest)
corr = cor(ytest,y_pred)
ttest = t.test(y_pred[ytest==1], y_pred[ytest==2], alternative="greater")$p.value
Ranksum = wilcox.test(y_pred[ytest==1], y_pred[ytest==2], alternative ="greater")$p.value
result = rbind(result, c(corr, ttest, Ranksum))
result
i
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
rm(list=ls())
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
#Method5)
library(PharmacoGx)
availablePSets()
GDSC_v2 = downloadPSet("GDSC_2020(v2-8.2)")
saveRDS(GDSC_v2, "Processed_data/S38/GDSC_v2_PharmacoGx.rds")
View(GDSC_v2)
GDSC_v2@treatmentResponse
GDSC_v2@annotation
#gCSI
gCSI = downloadPSet("gCSI_2019")
saveRDS(gCSI, "Processed_data/S38/gCSI_PharmacoGx.rds")
availablePSets()
rm(list=ls())
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GDSCv2 = readRDS("Processed_data/S38/GDSC_v2_PharmacoGx.rds")
View(GDSCv2)
GDSCv2[1]
GDSCv2[[1]]
CellName = phenoInfo(GDSCv2,"rna")                                  # Expression vilable cell line names (1018 Cell lines)
View(CellName)
CellName@nrows
CellName@rownames
CellInfo = cellInfo(GDSCv2)                                         # Cell line information (1110 Cell lines)
CellInfo = CellInfo[CellName$Characteristics.cell.line.,]         # Omit the unavilable cell lines
View(CellInfo)
GeneName = featureInfo(GDSCv2, "rna")
Expr = t(molecularProfiles(GDSCv2, "rna"))
rownames(Expr) = CellName$Characteristics.cell.line.
colnames(Expr) = GeneName$Symbol
View(Expr)
sen = summarizeSensitivityProfiles(pSet=GDSCv2, sensitivity.measure='ic50_published', summary.stat="median")  # 251, 1110
DrugInfo = drugInfo(GDSCv2)
View(DrugInfo)
sen = summarizeSensitivityProfiles(pSet=GDSCv2,
sensitivity.measure='ic50_published',
summary.stat="median")
sen = summarizeSensitivityProfiles(common$GDSC,
sensitivity.measure='auc_published',
summary.stat="median")
sen = summarizeSensitivityProfiles(pSet = GDSCv2,
sensitivity.measure='auc_published',
summary.stat="median")
sen = summarizeSensitivityProfiles(pSet = GDSCv2,
sensitivityMeasures ='auc_published',
summary.stat="median")
sen = sensitivityInfo(GDSCv2)
View(sen)
View(GDSCv2)
class(GDSCv2)
View(sen)
sen = sensitivityMeasures(Data)
sen = sensitivityMeasures(GDSCv2)
sen
S = sensNumber(GDSCv2)
View(S)
dim(S)
sen = summarizeSensitivityProfiles(pSet = GDSCv2, sensitivity.measure = c("gi50_published", "ic50_published", "auc_published", "ic50_recomputed", "auc_recomputed", "auc_recomputed_star", "Synergy_score", "amax_published", "amax_recomputed", "slope_recomputed"),
cell.lines, drugs, summary.stat = c("mean", "median", "first", "last"),
fill.missing = TRUE, verbose = TRUE)
sen = summarizeSensitivityProfiles(pSet = GDSCv2,
sensitivity.measure="ic50_published",
summary.stat="median")
library(PharmacoGx)
sen = summarizeSensitivityProfiles(pSet = GDSCv2,
sensitivity.measure="ic50_published",
summary.stat="median")
sen = summarizeSensitivityProfiles(pSet = GDSCv2,
sensitivity.measure="ic50_published",
summary.stat="median")
View(GDSCv2)
GDSCv2@treatment
GDSCv2@curation[["treatment"]]
GDSCv2@treatmentResponse
availablePSets()
sen = sensitivityMeaures(GDSCv2)
sen = sensitivityRaw(GDSCv2)
sen
sen = data.frame(sensitivityRaw(GDSCv2))
View(sen)
s = sensitivityProfiles(GDSCv2)
View(s)
s = sensitivityMeasures(GDSCv2)
s = data.frame(sensitivityMeasures(GDSCv2))
View(s)
a = treatmentResponse(GDSCv2)
View(a)
a[["info"]]
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
rm(list=ls())
library(PharmacoGx)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GDSCv2 = readRDS("Processed_data/S38/GDSC_v2_PharmacoGx.rds")
CellName = phenoInfo(GDSCv2,"rna")
View(CellName)
CellInfo = cellInfo(GDSCv2)
View(CellInfo)
View(CellName)
CellInfo = CellInfo[CellName$Characteristics.cell.line.,]
View(CellInfo)
GeneName = featureInfo(GDSCv2, "rna")
View(GeneName)
Expr = t(molecularProfiles(GDSCv2, "rna"))
View(Expr)
dim(Expr)
rownames(Expr) = CellName$Characteristics.cell.line.
colnames(Expr) = GeneName$Symbol
sen = summarizeSensitivityProfiles(pSet = GDSCv2,
sensitivity.measure="ic50_published",
summary.stat="median")
View(GDSCv2)
sen = summarizeSensitivityProfiles(pSet = GDSCv2,
sensitivity.measure="ic50_published",
summary.stat="median",
fill.missing = TRUE)
sen = summarizeSensitivityProfiles(pSet = GDSCv2,
sensitivity.measure="ic50_published",
summary.stat="median",
fill.missing = FALSE)
rm(list=ls())
library(PharmacoGx)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GDSCv2 = readRDS("Processed_data/S38/gCSI_PharmacoGx.rds")
CellName = phenoInfo(GDSCv2,"rna")
CellInfo = cellInfo(GDSCv2)
CellInfo = CellInfo[CellName$Characteristics.cell.line.,]
GeneName = featureInfo(GDSCv2, "rna")
Expr = t(molecularProfiles(GDSCv2, "rna"))
sen = summarizeSensitivityProfiles(pSet = GDSCv2,
sensitivity.measure="ic50_published",
summary.stat="median")
GeneName = featureInfo(GDSCv2, "rna")
Expr = t(molecularProfiles(GDSCv2, "rna"))
Expr = molecularProfiles(GDSCv2, "rna")
install.packages("PharmacoGx")
install.packages("PharmacoGx")
install.packages("PharmacoGx")
rm(list=ls())
library(PharmacoGx)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GDSCv2 = readRDS("Processed_data/S38/GDSC_v2_PharmacoGx.rds")
CellName = phenoInfo(GDSCv2,"rna")
CellInfo = cellInfo(GDSCv2)
CellInfo = CellInfo[CellName$Characteristics.cell.line.,]
GeneName = featureInfo(GDSCv2, "rna")
Expr = t(molecularProfiles(GDSCv2, "rna"))
rownames(Expr) = CellName$Characteristics.cell.line.
colnames(Expr) = GeneName$Symbol
sen = summarizeSensitivityProfiles(pSet = GDSCv2,
sensitivity.measure="ic50_published",
summary.stat="median")
rm(list=ls())
library(PharmacoGx)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GDSCv2 = readRDS("Processed_data/S38/gCSI_PharmacoGx.rds")
CellName = phenoInfo(GDSCv2,"rna")
CellInfo = cellInfo(GDSCv2)
CellInfo = CellInfo[CellName$Characteristics.cell.line.,]
GeneName = featureInfo(GDSCv2, "rna")
Expr = molecularProfiles(GDSCv2, "rna")
Expr = molecularProfiles(GDSCv2)
View(Expr)
sen = summarizeSensitivityProfiles(pSet = GDSCv2)
sen = summarizeSensitivityProfiles(GDSCv2)
sen = summarizeSensitivityProfiles(GDSCv2, sensitivity.measure="ic50_published",
summary.stat="median")
sen = summarizeSensitivityProfiles(GDSCv2, sensitivity.measure="ic50_published",
summary.stat="median")
sen = summarizeSensitivityProfiles(pSet, sensitivity.measure="ic50_published",
summary.stat="median")
sen = summarizeSensitivityProfiles(pSet = GDSCv2, sensitivity.measure="ic50_published",
summary.stat="median")
sen = summarizeSensitivityProfiles(pSet = GDSCv2, sensitivity.measure="ic50_published")
GDSCauc = summarizeSensitivityProfiles(GDSCv2, sensitivity.measure='auc_published')
rm(list=ls())
library(PharmacoGx)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GDSCv2 = readRDS("Processed_data/S38/GDSC_v2_PharmacoGx.rds")
CellName = phenoInfo(GDSCv2,"rna")
CellInfo = cellInfo(GDSCv2)
CellInfo = CellInfo[CellName$Characteristics.cell.line.,]
GeneName = featureInfo(GDSCv2, "rna")
Expr = t(molecularProfiles(GDSCv2, "rna"))
rownames(Expr) = CellName$Characteristics.cell.line.
colnames(Expr) = GeneName$Symbol
GDSCauc = summarizeSensitivityProfiles(GDSCv2, sensitivity.measure='auc_published')
GDSCauc = summarizeSensitivityProfiles(GDSCv2, sensitivity.measure='ic50_recomputed')
View(GDSCauc)
dim(GDSCauc)
availablePSets()
#GDSC
GDSC = downloadPSet("GDSC_2020(v1-8.2)")
saveRDS(GDSC, "Processed_data/S38/GDSC_PharmacoGx.rds")
rm(list=ls())
library(PharmacoGx)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GDSC = readRDS("Processed_data/S38/GDSC_PharmacoGx.rds")
CellName = phenoInfo(GDSC,"rna")
CellInfo = cellInfo(GDSC)
CellInfo = CellInfo[CellName$Characteristics.cell.line.,]
GeneName = featureInfo(GDSC, "rna")
Expr = t(molecularProfiles(GDSC, "rna"))
rownames(Expr) = CellName$Characteristics.cell.line.
colnames(Expr) = GeneName$Symbol
sen = summarizeSensitivityProfiles(pSet = GDSC, sensitivity.measure="ic50_published")
GDSCauc = summarizeSensitivityProfiles(GDSC, sensitivity.measure='ic50_recomputed')
dim(GDSCauc)
sensitivity = summarizeSensitivityProfiles(GDSC, sensitivity.measure='ic50_recomputed')
View(sensitivity)
sen = data.frame(sensitivityRaw(GDSC))
View(sen)
s = data.frame(sensitivityMeasures(GDSC))
View(s)
a = treatmentResponse(GDSC)
View(a)
aa = a$raw
aa = data.frame(a$raw)
View(aa)
DrugInfo = drugInfo(GDSC)
View(DrugInfo)
sen = sensitivityInfo(GDSC)
View(sen)
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
rm(list=ls())
library(parallel)
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
sen_PRISM = readRDS("Processed_data/Other/Sen_PRISM_24_Drugs.rds")
res_TCGA = readRDS("Processed_data/Other/Res_TCGA_24_Drugs.rds")
GE_PRISM = read.table("Processed_data/S34/wsum4_PRISM.csv",sep = ",",header = TRUE, row.names = 1)
GE_TCGA = read.table("Processed_data/S34/wsum4_TCGA.csv",sep = ",",header = TRUE, row.names = 1)
# Remove genes whose Q3 is zero
q3_genes = apply(GE_TCGA,2,quantile,prob=0.75)
GE_TCGA = GE_TCGA[,-which(q3_genes==0)]
GE_PRISM = GE_PRISM[,-which(q3_genes==0)]
GE_PRISM = read.table("Processed_data/S34/wsum4_PRISM.csv",sep = ",",header = TRUE, row.names = 1)
GE_TCGA = read.table("Processed_data/S34/wsum4_TCGA.csv",sep = ",",header = TRUE, row.names = 1)
View(GE_PRISM)
View(GE_TCGA)
# Remove genes whose Q3 is zero
q3_genes = apply(GE_TCGA,2,quantile,prob=0.75)
q3_genes
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
rm(list=ls())
library(parallel)
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
sen_PRISM = readRDS("Processed_data/Other/Sen_PRISM_24_Drugs.rds")
res_TCGA = readRDS("Processed_data/Other/Res_TCGA_24_Drugs.rds")
GE_PRISM = read.table("Processed_data/S34/gsea2_PRISM.csv",sep = ",",header = TRUE, row.names = 1)
GE_TCGA = read.table("Processed_data/S34/gsea2_TCGA.csv",sep = ",",header = TRUE, row.names = 1)
# Remove genes whose Q3 is zero
q3_genes = apply(GE_TCGA,2,quantile,prob=0.75)
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
# Remove genes whose Q3 is zero
q3_genes = apply(GE_TCGA,2,quantile,prob=0.75)
GE_TCGA = GE_TCGA[,-which(q3_genes==0)]
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
rm(list=ls())
library(PharmacoGx)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GDSC = readRDS("Processed_data/S38/GDSC_PharmacoGx.rds")
CellName = phenoInfo(GDSC,"rna")
CellInfo = cellInfo(GDSC)
CellInfo = CellInfo[CellName$Characteristics.cell.line.,]
GeneName = featureInfo(GDSC, "rna")
Expr = t(molecularProfiles(GDSC, "rna"))
rownames(Expr) = CellName$Characteristics.cell.line.
colnames(Expr) = GeneName$Symbol
sensitivity = summarizeSensitivityProfiles(GDSC, sensitivity.measure='ic50_recomputed')
View(sensitivity)
dim(Expr)
dim(sensitivity)
length(intersect(rownames(Expr),colnames(sensitivity)))
length(intersect(rownames(Expr),colnames(sensitivity)))
sensitivity = t(sensitivity)
dim(sensitivity)
length(intersect(rownames(Expr),rownames(sensitivity)))
I = intersect(rownames(Expr),rownames(sensitivity)))
I = intersect(rownames(Expr),rownames(sensitivity))
I
Expr = Expr[I,]
View(Expr)
sensitivity = sensitivity[I,]
View(sensitivity)
dim(sensitivity)
View(sensitivity)
hist(sensitivity)
max(sensitivity,na.omit = TRUE)
max(sensitivity,na.omit = TRUE)
max(sensitivity,na.rm = TRUE)
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
Result = readRDS("Final_Result/Train@PRISM_Test@TCGA_FS/RF5-decoupleR_gsea2.rds")
View(Result)
#saveRDS(Result,"Final_Result/Train@PRISM_Test@TCGA_FS/RF5-decoupleR_wsum4.rds")
print(sum(Result$Ranksum<0.05))
print(which(Result$Ranksum<0.05))
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF5-decoupleR_PRISM@TCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/RF16-ModelComparison_TrainPRISM_TestTCGA.R")
