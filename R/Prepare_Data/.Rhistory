library(igraph)
install.packages("igraph")
library(igraph)
install.packages("igraph")
install.packages("igraph")
library(igraph)
BiocManager::install("igraph")
source("~/Desktop/Cancer_DRP/R/Single_Drug/RF/RF.R")
s= t(sen)
View(s)
View(X)
s = colnames(sen)
source("~/Desktop/Cancer_DRP/R/Single_Drug/RF/RF.R")
#print(MSE)
print(mean(Final_Cor))
rm(list=ls())
require(caTools)
library(randomForest)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GE = readRDS("Processed_Data/expresion_matrix.rds")
sen = readRDS("Processed_Data/sensitivity_matrix.rds")
# Finding transcription activities using dorothea
data(dorothea_hs, package = "dorothea")
GE = t(GE)              # input: rows are genes and columns are cell lines
tf_activities <- run_viper(GE, dorothea_hs,
options =  list(method = "scale", minsize = 4,
eset.filter = FALSE, cores = 1,
verbose = FALSE))
tf_activities <- run_viper(GE, dorothea_hs,
options =  list(method = "scale", minsize = 4,
eset.filter = FALSE, cores = 1,
verbose = FALSE))
library(dorothea)
tf_activities <- run_viper(GE, dorothea_hs,
options =  list(method = "scale", minsize = 4,
eset.filter = FALSE, cores = 1,
verbose = FALSE))
TF = t(tf_activities)
dim(TF)
rm(list=ls())
require(caTools)
library(randomForest)
library(dorothea)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GE = readRDS("Processed_Data/expresion_matrix.rds")
sen = readRDS("Processed_Data/sensitivity_matrix.rds")
i = 325                            # drug number
GE = GE[!is.na(sen[,i]),]
sen_i = sen[!is.na(sen[,i]),i]
dim(GE)
length(sen_i)
DEG = apply(GE,2,function(x){return(cor(x,sen_i))})
idx_Cor = order(Cor_GE_sen,decreasing = TRUE)
# Finding differentially expresed genes
Cor_GE_sen = apply(GE,2,function(x){return(cor(x,sen_i))})
idx_Cor = order(Cor_GE_sen,decreasing = TRUE)
idx_Cor
Cor_GE_sen
hist(Cor_GE_sen,30)
# Finding differentially expresed genes
Cor_GE_sen = apply(GE,2,function(x){return(abs(cor(x,sen_i)))})
hist(Cor_GE_sen,30)
GE = GE[,1:500]
GE = t(GE)              # input: rows are genes and columns are cell lines
dim(GE)
# Finding transcription activities using dorothea
data(dorothea_hs, package = "dorothea")
tf_activities <- run_viper(GE, dorothea_hs,
options =  list(method = "scale", minsize = 4,
eset.filter = FALSE, cores = 1,
verbose = FALSE))
TF = t(tf_activities)
# Normalization
X = scale(X)
y = scale(y)
# Normalization
X = scale(GE)
y = scale(sen_i)
Rep = 10
MSE = rep(0,Rep)
Corr = rep(0,Rep)
for (j in 1:Rep){
## Split data into train & test
sample = sample.split(y, SplitRatio = .8)
Xtrain = subset(X, sample == TRUE)
Xtest  = subset(X, sample == FALSE)
ytrain = subset(y, sample == TRUE)
ytest  = subset(y, sample == FALSE)
ytrain = as.vector(ytrain)
ytest = as.vector(ytest)
## train model
RF = randomForest(y = ytrain,x = Xtrain, ntree = 200,mtry = 50)
y_pred = predict(RF, newdata=Xtest)
MSE[j] = mean((ytest - y_pred)^2)
Corr[j] = cor(ytest, y_pred, method = "pearson")
#print(MSE[j])
print(Corr[j])
}
## Split data into train & test
sample = sample.split(y, SplitRatio = .8)
Xtrain = subset(X, sample == TRUE)
Xtest  = subset(X, sample == FALSE)
ytrain = subset(y, sample == TRUE)
ytest  = subset(y, sample == FALSE)
ytrain = as.vector(ytrain)
ytest = as.vector(ytest)
## train model
RF = randomForest(y = ytrain,x = Xtrain, ntree = 200,mtry = 50)
# Normalization
X = scale(TF)
y = scale(sen_i)
Rep = 10
MSE = rep(0,Rep)
Corr = rep(0,Rep)
for (j in 1:Rep){
## Split data into train & test
sample = sample.split(y, SplitRatio = .8)
Xtrain = subset(X, sample == TRUE)
Xtest  = subset(X, sample == FALSE)
ytrain = subset(y, sample == TRUE)
ytest  = subset(y, sample == FALSE)
ytrain = as.vector(ytrain)
ytest = as.vector(ytest)
## train model
RF = randomForest(y = ytrain,x = Xtrain, ntree = 200,mtry = 50)
y_pred = predict(RF, newdata=Xtest)
MSE[j] = mean((ytest - y_pred)^2)
Corr[j] = cor(ytest, y_pred, method = "pearson")
#print(MSE[j])
print(Corr[j])
}
Test_Result = data.frame(MSE = MSE, Cor = Corr)
print(apply(Test_Result,2,mean))
dim(TF)
source("~/Desktop/Cancer_DRP/R/Prepare_Data/Step10-DoRothEA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/Step10-DoRothEA.R")
dim(TF)
source("~/Desktop/Cancer_DRP/R/Prepare_Data/Step10-DoRothEA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/Step10-DoRothEA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/Step10-DoRothEA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/Step10-DoRothEA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/Step10-DoRothEA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/Step10-DoRothEA.R")
