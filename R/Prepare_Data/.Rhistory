Xtest = Xtest)
# y_pred re-normalization
y_pred_RF = (y_pred_RF*STD_y)+Mean_y
y_pred_ENet = (y_pred_ENet*STD_y)+Mean_y
y_pred_MLP = (y_pred_MLP*STD_y)+Mean_y
# Evaluation
mse_RF = mean((ytest-y_pred_RF)^2)
corr_RF = cor(ytest,y_pred_RF)
mse_ENet = mean((ytest-y_pred_ENet)^2)
corr_ENet = cor(ytest,y_pred_ENet)
mse_MLP = mean((ytest-y_pred_MLP)^2)
corr_MLP = cor(ytest,y_pred_MLP)
result = data.frame(mse_RF = mse_RF,corr_RF = corr_RF,
mse_ENet = mse_ENet, corr_ENet = corr_ENet,
mse_MLP = mse_MLP, corr_MLP = corr_MLP)
result = parLapply(cl, sapply(1:N_itration, list), RepLoop)
Result = data.frame()
View(result)
source("~/Desktop/Cancer_DRP/R/Prepare_Data/F0-General_Framework_PP_2.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/F0-General_Framework_PP_2.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/Step14-DoRothEA.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/Step14-DoRothEA.R")
dim(TF_activities)
source("~/Desktop/Cancer_DRP/R/Prepare_Data/F0-General_Framework_PP_2.R")
rm(list=ls())
library(parallel)
library(caTools)
library(igraph)
library(dorothea)
source("F4-DoRothEA.R")
source("F9-decoupleR.R")
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
#Read data--------------------------------------------------
sen = readRDS("Processed_Data/Step1/sensitivity_matrix.rds")
GE = readRDS("Processed_Data/Step1/expresion_matrix.rds")
omics = GE
Interaction_Network = "OP_decoupleR"
MyGraph = NA
my_genes = NA
if (Interaction_Network == "STRING"){
GE = readRDS("Processed_data/Step9/expresion_matrix_PRISM_STRING.rds")
STRING_edgelist = readRDS("Processed_data/Step9/ppi_STRING_PRISM.rds")
ppi = rbind(STRING_edgelist$gene_symbol1, STRING_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "Omnipath"){
GE = readRDS("Processed_data/Step10/expresion_matrix_PRISM_Omnipath.rds")
Omnipath_edgelist = readRDS("Processed_data/Step10/ppi_Omnipath_PRISM.rds")
ppi = rbind(Omnipath_edgelist$gene_symbol1, Omnipath_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "OP_decoupleR"){
TF_dR = decoupleR(X = GE, method = "wmean")
omics = t(TF_dR)
} else if(Interaction_Network == "OP_DoRothEA"){
TF_Do = DoRothEA(X = GE)
omics = t(TF_Do)
}
Interaction_Network = "OP_decoupleR"
Interaction_Network == "OP_decoupleR"
TF_dR = decoupleR(X = GE, method = "wmean")
library(decoupleR)
library(doMC)
library(AUCell)
library(ranger)
X = GE
method = "wmean"
dorothea = get_dorothea(organism = "human", levels = c("A","B","C"))
method == "aucell"
method == "wmean"
X_TF = run_wmean(
mat = X,
network = dorothea,
.mor = .data$mor,
.likelihood = .data$likelihood,
times = 100,
sparse = TRUE,
randomize_type = "rows",
minsize = 5
)}
X_TF = run_wmean(
mat = X,
network = dorothea,
.mor = .data$mor,
.likelihood = .data$likelihood,
times = 100,
sparse = TRUE,
randomize_type = "rows",
minsize = 5
)}
X_TF = run_wmean(
mat = X,
network = dorothea,
.mor = .data$mor,
.likelihood = .data$likelihood,
times = 100,
sparse = TRUE,
randomize_type = "rows",
minsize = 5
)
X = t(X)
dorothea = get_dorothea(organism = "human", levels = c("A","B","C"))
if (method == "aucell"){
X_TF = run_aucell(
mat = X,
network = dorothea,
minsize=5,
)}
source("~/Desktop/Cancer_DRP/R/Prepare_Data/F0-General_Framework_PP_2.R")
rm(list=ls())
library(parallel)
library(caTools)
library(igraph)
library(dorothea)
source("F4-DoRothEA.R")
source("F9-decoupleR.R")
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
#Read data--------------------------------------------------
sen = readRDS("Processed_Data/Step1/sensitivity_matrix.rds")
GE = readRDS("Processed_Data/Step1/expresion_matrix.rds")
omics = GE
Interaction_Network = "OP_decoupleR"
MyGraph = NA
my_genes = NA
if (Interaction_Network == "STRING"){
GE = readRDS("Processed_data/Step9/expresion_matrix_PRISM_STRING.rds")
STRING_edgelist = readRDS("Processed_data/Step9/ppi_STRING_PRISM.rds")
ppi = rbind(STRING_edgelist$gene_symbol1, STRING_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "Omnipath"){
GE = readRDS("Processed_data/Step10/expresion_matrix_PRISM_Omnipath.rds")
Omnipath_edgelist = readRDS("Processed_data/Step10/ppi_Omnipath_PRISM.rds")
ppi = rbind(Omnipath_edgelist$gene_symbol1, Omnipath_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "OP_decoupleR"){
TF_dR = decoupleR(X = GE, method = "wmean")
omics = t(TF_dR)
} else if(Interaction_Network == "OP_DoRothEA"){
TF_Do = DoRothEA(X = GE)
omics = t(TF_Do)
}
X = GE
method = "wmean"
dim(X)
library(decoupleR)
library(doMC)
library(AUCell)
library(ranger)
X = t(X)
dorothea = get_dorothea(organism = "human", levels = c("A","B","C"))
method == "wmean"
X_TF = run_wmean(
mat = X,
network = dorothea,
.mor = .data$mor,
.likelihood = .data$likelihood,
times = 100,
sparse = TRUE,
randomize_type = "rows",
minsize = 5
)
X_TF = run_aucell(
mat = X,
network = dorothea,
minsize=5,
)}
X_TF = run_aucell(
mat = X,
network = dorothea,
minsize=5,
)
source("~/Desktop/Cancer_DRP/R/Prepare_Data/F0-General_Framework_PP_2.R")
source("~/Desktop/Cancer_DRP/R/Prepare_Data/F0-General_Framework_PP_2.R")
dim(omics)
rm(list=ls())
library(parallel)
library(caTools)
library(igraph)
library(dorothea)
source("F4-DoRothEA.R")
source("F9-decoupleR.R")
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
#Read data--------------------------------------------------
sen = readRDS("Processed_Data/Step1/sensitivity_matrix.rds")
GE = readRDS("Processed_Data/Step1/expresion_matrix.rds")
omics = GE
Interaction_Network = "OP_decoupleR"
MyGraph = NA
my_genes = NA
if (Interaction_Network == "STRING"){
GE = readRDS("Processed_data/Step9/expresion_matrix_PRISM_STRING.rds")
STRING_edgelist = readRDS("Processed_data/Step9/ppi_STRING_PRISM.rds")
ppi = rbind(STRING_edgelist$gene_symbol1, STRING_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "Omnipath"){
GE = readRDS("Processed_data/Step10/expresion_matrix_PRISM_Omnipath.rds")
Omnipath_edgelist = readRDS("Processed_data/Step10/ppi_Omnipath_PRISM.rds")
ppi = rbind(Omnipath_edgelist$gene_symbol1, Omnipath_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "OP_decoupleR"){
TF_dR = decoupleR(X = GE, method = "aucell")
omics = t(TF_dR)
} else if(Interaction_Network == "OP_DoRothEA"){
TF_Do = DoRothEA(X = GE)
omics = t(TF_Do)
}
dim(omics)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
#Read data--------------------------------------------------
sen = readRDS("Processed_Data/Step1/sensitivity_matrix.rds")
GE = readRDS("Processed_Data/Step1/expresion_matrix.rds")
omics = GE
Interaction_Network = "OP_decoupleR"
MyGraph = NA
my_genes = NA
if (Interaction_Network == "STRING"){
GE = readRDS("Processed_data/Step9/expresion_matrix_PRISM_STRING.rds")
STRING_edgelist = readRDS("Processed_data/Step9/ppi_STRING_PRISM.rds")
ppi = rbind(STRING_edgelist$gene_symbol1, STRING_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "Omnipath"){
GE = readRDS("Processed_data/Step10/expresion_matrix_PRISM_Omnipath.rds")
Omnipath_edgelist = readRDS("Processed_data/Step10/ppi_Omnipath_PRISM.rds")
ppi = rbind(Omnipath_edgelist$gene_symbol1, Omnipath_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "OP_decoupleR"){
TF_dR = decoupleR(X = GE, method = "aucell")
omics = t(TF_dR)
} else if(Interaction_Network == "OP_DoRothEA"){
TF_Do = DoRothEA(X = GE)
omics = t(TF_Do)
}
dim(omics)
source("F9-decoupleR.R")
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
#Read data--------------------------------------------------
sen = readRDS("Processed_Data/Step1/sensitivity_matrix.rds")
GE = readRDS("Processed_Data/Step1/expresion_matrix.rds")
omics = GE
Interaction_Network = "OP_decoupleR"
MyGraph = NA
my_genes = NA
if (Interaction_Network == "STRING"){
GE = readRDS("Processed_data/Step9/expresion_matrix_PRISM_STRING.rds")
STRING_edgelist = readRDS("Processed_data/Step9/ppi_STRING_PRISM.rds")
ppi = rbind(STRING_edgelist$gene_symbol1, STRING_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "Omnipath"){
GE = readRDS("Processed_data/Step10/expresion_matrix_PRISM_Omnipath.rds")
Omnipath_edgelist = readRDS("Processed_data/Step10/ppi_Omnipath_PRISM.rds")
ppi = rbind(Omnipath_edgelist$gene_symbol1, Omnipath_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "OP_decoupleR"){
TF_dR = decoupleR(X = GE, method = "aucell")
omics = t(TF_dR)
} else if(Interaction_Network == "OP_DoRothEA"){
TF_Do = DoRothEA(X = GE)
omics = t(TF_Do)
}
dim(GE)
rm(list=ls())
library(parallel)
library(caTools)
library(igraph)
library(dorothea)
source("F4-DoRothEA.R")
source("F9-decoupleR.R")
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
#Read data--------------------------------------------------
sen = readRDS("Processed_Data/Step1/sensitivity_matrix.rds")
GE = readRDS("Processed_Data/Step1/expresion_matrix.rds")
omics = GE
Interaction_Network = "OP_decoupleR"
MyGraph = NA
my_genes = NA
if (Interaction_Network == "STRING"){
GE = readRDS("Processed_data/Step9/expresion_matrix_PRISM_STRING.rds")
STRING_edgelist = readRDS("Processed_data/Step9/ppi_STRING_PRISM.rds")
ppi = rbind(STRING_edgelist$gene_symbol1, STRING_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "Omnipath"){
GE = readRDS("Processed_data/Step10/expresion_matrix_PRISM_Omnipath.rds")
Omnipath_edgelist = readRDS("Processed_data/Step10/ppi_Omnipath_PRISM.rds")
ppi = rbind(Omnipath_edgelist$gene_symbol1, Omnipath_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "OP_decoupleR"){
TF_dR = decoupleR(X = t(GE), method = "aucell")
omics = t(TF_dR)
} else if(Interaction_Network == "OP_DoRothEA"){
TF_Do = DoRothEA(X = GE)
omics = t(TF_Do)
}
dim(omics)
rm(list=ls())
library(parallel)
library(caTools)
library(igraph)
library(dorothea)
source("F4-DoRothEA.R")
source("F9-decoupleR.R")
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
#Read data--------------------------------------------------
sen = readRDS("Processed_Data/Step1/sensitivity_matrix.rds")
GE = readRDS("Processed_Data/Step1/expresion_matrix.rds")
omics = GE
Interaction_Network = "OP_decoupleR"
MyGraph = NA
my_genes = NA
Interaction_Network == "OP_decoupleR"
X = GE
method = "aucell"
dim(X)
library(decoupleR)
library(doMC)
library(AUCell)
library(ranger)
dorothea = get_dorothea(organism = "human", levels = c("A","B","C"))
method == "aucell"
X_TF = run_aucell(
mat = X,
network = dorothea,
minsize=5,
)
X_TF = run_aucell(
mat = t(X),
network = dorothea,
minsize=5,
)
dim(X_TF)
dim(X)
X
View(X)
X = t(GE)
dim(X)
X_TF = run_aucell(
mat = X,
network = dorothea,
minsize=5,
)
dim(X_TF)
X_TF = decoupleR::run_aucell(
mat = X,
network = dorothea,
minsize=5,
)
dim(X_TF)
View(X_TF)
t = readRDS("Processed_data/Step13/TF_wmean.rds")
View(t)
rm(list=ls())
library(parallel)
library(caTools)
library(igraph)
library(dorothea)
source("F4-DoRothEA.R")
source("F9-decoupleR.R")
no_cores = detectCores()
cl = makeCluster(no_cores-2)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
#Read data--------------------------------------------------
sen = readRDS("Processed_Data/Step1/sensitivity_matrix.rds")
GE = readRDS("Processed_Data/Step1/expresion_matrix.rds")
omics = GE
Interaction_Network = "OP_DoRothEA"
MyGraph = NA
my_genes = NA
if (Interaction_Network == "STRING"){
GE = readRDS("Processed_data/Step9/expresion_matrix_PRISM_STRING.rds")
STRING_edgelist = readRDS("Processed_data/Step9/ppi_STRING_PRISM.rds")
ppi = rbind(STRING_edgelist$gene_symbol1, STRING_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "Omnipath"){
GE = readRDS("Processed_data/Step10/expresion_matrix_PRISM_Omnipath.rds")
Omnipath_edgelist = readRDS("Processed_data/Step10/ppi_Omnipath_PRISM.rds")
ppi = rbind(Omnipath_edgelist$gene_symbol1, Omnipath_edgelist$gene_symbol2)
MyGraph = simplify(graph(ppi, directed = FALSE))
my_genes = V(MyGraph)$name
omics = GE
} else if(Interaction_Network == "OP_decoupleR"){
#TF_dR = decoupleR(X = t(GE), method = "aucell")
#omics = t(TF_dR)
} else if(Interaction_Network == "OP_DoRothEA"){
TF_Do = DoRothEA(X = GE)
omics = t(TF_Do)
}
dim(omics)
View(TF_Do)
rm(list=ls())
setwd("~/Desktop/Codes/R/DRP/Datasets-PharmacoGx/CCLE/Data/New_Data/")
ccle = readRDS("CCLE_data.rds")
View(ccle)
View(ccle)
library(PharmacoGx)
setwd("~/Desktop/Codes/R/DRP/Datasets-PharmacoGx/CCLE/Data/New_Data/")
ccle = readRDS("CCLE_data.rds")
View(ccle)
drugNames = drugNames(ccle)
setwd("~/Desktop/Codes/R/DRP/Datasets-PharmacoGx/CCLE/Data/")
#CCLE_data = downloadPSet("CCLE_2015")
load("CCLE.RData")
View(CCLE)
#CCLE_data = downloadPSet("CCLE_2015")
load("CopyOfCCLE.RData")
View(CCLE)
d = read.csv("CCLE-Drug.csv")
View(d)
rm(list=ls())
setwd("~/Desktop/Codes/R/DRP/Datasets-PharmacoGx/PharmacoGx/PSets/")
#CCLE_data = downloadPSet("CCLE_2015")
load("CCLE_2013.RData")
View(CCLE)
#CCLE_data = downloadPSet("CCLE_2015")
load("CCLE.RData")
View(CCLE)
#CCLE_data = downloadPSet("CCLE_2015")
load("CMAP.RData")
View(CMAP)
#CCLE_data = downloadPSet("CCLE_2015")
load("GDSC1000.RData")
View(GDSC1000)
#CCLE_data = downloadPSet("CCLE_2015")
load("L1000_genetic.RData")
rm(list=ls())
n = c(0.1, 0.2, 0.3)
n
1:3/10
names(n) = c("a","b","c")
n = 1:3/10
names(n) = c("a","b","c")
n
names(n) = letters[1:3]
n
v- v[length(v):1]
v=1:10
v- v[length(v):1]
length(v)
v[length(v):1]
length(v):1
v- [length(v):1]
v- v[length(v):1]
inv_vec = function(vec){vec[length(vec):1]}
inv_vec(v)
v-inv_vec(v)
rev(v)
v- rev(v)
setwd("~/Desktop/Codes/R/DRP/Paper_No2/Data/CCLE/CCLE_web/Drug_Sensitivity/")
d =read.csv("CCLE_NP24.2009_Drug_data_2015.02.24.csv")
View(d)
length(unique(d$Compound))
setwd("~/Desktop/Codes/R/DRP/Paper_No2/Data/CCLE/")
r = readRDS("getGEO/mRNA/GSE36139.rds")
View(r)
expr = exprs(r)
View(expr)
dim(expr)
f = fData(r)
View(f)
rm(list=ls())
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
rm(list=ls())
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
GE = readRDS("Raw_data/CCLE/Expression/RNA_seq/CCLE_RNAseq_rsem_transcripts_tpm_20180929.txt.gz")
RNA_seq = read.table("Raw_data/CCLE/Expression/RNA_seq/CCLE_RNAseq_rsem_transcripts_tpm_20180929.txt.gz",
header = TRUE, check.names = FALSE)
sen = read.csv("Raw_data/CCLE/Drug_Sensitivity/CCLE_NP24.2009_Drug_data_2015.02.24.csv")
View(sen)
gene_transfer = import("Raw_data/CCLE/Expression/RNA_seq/gencode.v19.genes.v7_model.patched_contigs.gtf.gz")
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
gene_transfer = import("Raw_data/CCLE/Expression/RNA_seq/gencode.v19.genes.v7_model.patched_contigs.gtf.gz")
gene_transfer = import("Raw_data/CCLE/Expression/RNA_seq/gencode.v19.genes.v7_model.patched_contigs.gtf.gz")
rm(list=ls())
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
sen = read.csv("Raw_data/CCLE/Drug_Sensitivity/CCLE_NP24.2009_Drug_data_2015.02.24.csv")
RNA_seq = read.table("Raw_data/CCLE/Expression/RNA_seq/CCLE_RNAseq_rsem_transcripts_tpm_20180929.txt.gz",
header = TRUE, check.names = FALSE)
gene_transfer = import("Raw_data/CCLE/Expression/RNA_seq/gencode.v19.genes.v7_model.patched_contigs.gtf.gz")
