library(igraph)
install.packages("igraph")
library(igraph)
install.packages("igraph")
install.packages("igraph")
library(igraph)
BiocManager::install("igraph")
source("~/Desktop/Cancer_DRP/R/Single_Drug/ENet/ENet_glmnet.R")
rm(list=ls())
library(caTools)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
source ("ENet_Func.R")
#Read data--------------------------------------------------
GE = readRDS("Processed_Data/Step1/expresion_matrix.rds")
sen = readRDS("Processed_Data/Step1/sensitivity_matrix.rds")
dim(GE)
dim(sen)
#loop across drugs--------------------------------------
Rep = 2
#mean_mse = rep(0,ncol(sen))
#sd_mse = rep(0,ncol(sen))
#mean_corr = rep(0,ncol(sen))
#sd_corr = rep(0,ncol(sen))
Results = data.frame()
i=325
#i=325
print(i)
X = GE[!is.na(sen[,i]),]
dim(X)
y = sen[!is.na(sen[,i]),i]
length(y)
Corr = cor(X,y)
order_corr = order(Corr,decreasing = TRUE)
X = X[,order_corr[1:5000]]
#loop across repeats
mse_RF = rep(0,Rep)
corr_RF = rep(0,Rep)
mse_ENet = rep(0,Rep)
corr_ENet = rep(0,Rep)
mse_MLP = rep(0,Rep)
corr_MLP = rep(0,Rep)
sample = sample.split(y, SplitRatio = .8)
Xtr_val = subset(X, sample == TRUE)
Xtest  = subset(X, sample == FALSE)
ytr_val = subset(y, sample == TRUE)
ytest  = subset(y, sample == FALSE)
Xtrain = Xtr_val
ytrain = ytr_val
# Normalization
# Xtrain normalization
Mean_X = apply(Xtrain,2,mean)
STD_X = apply(Xtrain,2,sd)
Xtrain = (Xtrain-Mean_X)/STD_X
# Xtest normalization
Xtest = (Xtest-Mean_X)/STD_X
# Ytrain normalization
Mean_y = mean(ytrain)
STD_y = sd(ytrain)
ytrain_norm = (ytrain-Mean_y)/STD_y
# Models
ntree = 200
mtry = 100
y_pred_ENet = ElasticNet(ytrain = ytrain ,Xtrain = Xtrain,
Xtest = Xtest)
rm(list=ls())
library(caTools)
setwd("~/Desktop/Cancer_DRP/R/Prepare_Data/")
#source ("RandomForest_Func.R")
source ("ENet_Func.R")
source("MLP_Func.R")
#Read data--------------------------------------------------
GE = readRDS("Processed_Data/Step1/expresion_matrix.rds")
sen = readRDS("Processed_Data/Step1/sensitivity_matrix.rds")
dim(GE)
dim(sen)
#loop across drugs--------------------------------------
Rep = 2
#mean_mse = rep(0,ncol(sen))
#sd_mse = rep(0,ncol(sen))
#mean_corr = rep(0,ncol(sen))
#sd_corr = rep(0,ncol(sen))
Results = data.frame()
i=325
#i=325
print(i)
X = GE[!is.na(sen[,i]),]
dim(X)
y = sen[!is.na(sen[,i]),i]
length(y)
Corr = cor(X,y)
order_corr = order(Corr,decreasing = TRUE)
X = X[,order_corr[1:5000]]
#loop across repeats
mse_RF = rep(0,Rep)
corr_RF = rep(0,Rep)
mse_ENet = rep(0,Rep)
corr_ENet = rep(0,Rep)
mse_MLP = rep(0,Rep)
corr_MLP = rep(0,Rep)
sample = sample.split(y, SplitRatio = .8)
Xtr_val = subset(X, sample == TRUE)
Xtest  = subset(X, sample == FALSE)
ytr_val = subset(y, sample == TRUE)
ytest  = subset(y, sample == FALSE)
Xtrain = Xtr_val
ytrain = ytr_val
# Normalization
# Xtrain normalization
Mean_X = apply(Xtrain,2,mean)
STD_X = apply(Xtrain,2,sd)
Xtrain = (Xtrain-Mean_X)/STD_X
# Xtest normalization
Xtest = (Xtest-Mean_X)/STD_X
# Ytrain normalization
Mean_y = mean(ytrain)
STD_y = sd(ytrain)
ytrain_norm = (ytrain-Mean_y)/STD_y
# Models
ntree = 200
mtry = 100
y_pred_ENet = ElasticNet(ytrain = ytrain ,Xtrain = Xtrain,
Xtest = Xtest)
